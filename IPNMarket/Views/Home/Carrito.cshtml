@model List<IPNMarket.Models.CarritoModel>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IPNMarket - Tu tienda virtual</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="~/css/CrearCuentaV3.css" />

    <style>
        body {
            background-color: rgb(27, 18, 18);
        }

        .container {
            display: flex;
            flex-direction: column;
            gap: 20px; /* Aumenta el espacio entre los elementos del formulario */
            background-color: rgb(52, 52, 52, 0.95);
            padding: 20px;
            width: 100%; /* Haz que el formulario ocupe todo el ancho disponible */
            max-width: 900px; /* Establece un ancho máximo para el formulario */
            border-radius: 20px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1); /* Agrega una sombra suave al formulario */
            margin: auto; /* Centra el formulario horizontalmente en la página */
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        h2 {
            color: white;
            font-size: 32px; /* Ajusta el tamaño del título */
            margin-bottom: 30px; /* Aumenta el espacio debajo del título */
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f3f3f3;
            color: #8B0000;
            text-align: center;
        }

        td {
            background-color: #f3f3f3;
            color: #8B0000;
        }

        td img {
            border-radius: 5px;
            max-width: 60px;
        }


        .empty-cart {
            font-style: italic;
            color: #8B0000;
            text-align: center;
            margin: 20px 0;
        }

        .vaciar-carrito, .regresar {
            display: inline-block;
            background-color: #28a745;
            color: #ffffff;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            font-size: 16px;
            border-radius: 5px;
            transition: background-color 0.3s ease;
            cursor: pointer;
            margin-top: 20px;
        }

            .vaciar-carrito:hover {
                background-color: #218838;
            }

        .regresar {
            background-color: #6c757d;
        }

            .regresar:hover {
                background-color: #5a6268;
            }

        .total-row {
            background-color: #f3f3f3;
            font-weight: bold;
        }

        .total-container {
            text-align: right;
            margin-top: 20px;
            padding: 20px;
            background-color: #f3f3f3;
            border-radius: 8px;
        }

            .total-container p {
                margin: 5px 0;
                font-size: 18px;
                color: #8B0000;
            }

                .total-container p span {
                    font-weight: bold;
                }

        .btn {
            margin-top: 10px;
            width: 100%;
            height: 50px;
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: 500;
            gap: 10px;
            border: 1px solid white;
            background-color: white;
            color: #8B0000;
            cursor: pointer;
            transition: 0.2s ease-in-out;
        }

            .btn:hover {
                border: 1px solid #8B0000;
                background-color: #8B0000;
                color: white;
            }

        .flex-row {
            display: flex;
            flex-direction: row;
            align-items: center;
            gap: 10px;
            justify-content: space-between;
        }

            .flex-row > div > label {
                font-size: 14px;
                color: black;
                font-weight: 400;
            }
    </style>
</head>
<body>
    <ul class="circles">
        <li class="red"></li>
        <li class="white"></li>
        <li class="red"></li>
        <li class="white"></li>
        <li class="red"></li>
        <li class="white"></li>
        <li class="white"></li>
        <li class="white"></li>
        <li class="red"></li>
        <li class="red"></li>
    </ul>

    <div class="container">
        <h2>CARRITO DE COMPRAS</h2>

        @if (Model.Count > 0)
        {
            <div class="total-container">
                <table>
                    <thead>
                        <tr>
                            <th>IMAGEN</th>
                            <th>DESCRIPCIÓN</th>
                            <th>CANTIDAD</th>
                            <th>PRECIO</th>
                            <th>Sub-TOTALES</th>
                            <th>ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @{
                                        string imageData = "";
                                        if (item.Imagen != null && item.Imagen.Length > 0)
                                        {
                                            string base64 = Convert.ToBase64String(item.Imagen);
                                            string extension = "jpg"; // Extensión predeterminada

                                            // Determinar la extensión de la imagen
                                            if (item.Imagen.Take(4).SequenceEqual(new byte[] { 137, 80, 78, 71 }))
                                            {
                                                extension = "png";
                                            }
                                            else if (item.Imagen.Take(2).SequenceEqual(new byte[] { 255, 216 }))
                                            {
                                                extension = "jpeg";
                                            }

                                            // Crear el esquema data URI
                                            imageData = $"data:image/{extension};base64,{base64}";
                                        }
                                    }
                                    @if (!string.IsNullOrEmpty(imageData))
                                    {
                                        <img src="@imageData" alt="@item.ID_Producto">
                                    }
                                    else
                                    {
                                        <span>No disponible</span>
                                    }
                                </td>
                                <td>@item.Descripción</td>
                                <td>@item.Cantidad</td>
                                <td>@item.Precio.ToString("C")</td>
                                <td>@item.Sub_Total.ToString("C")</td>
                                <td>
                                    <button onclick="editarProducto('@item.ID_Carrito')" class="btn btn-primary">Editar</button>
                                    <button onclick="confirmarEliminacion('@item.ID_Carrito', '@item.Cantidad')" class="btn btn-primary">Eliminar</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="total-container">
                <p>SUB-Total: <span>@(Model.Sum(item => item.Sub_Total).ToString("C"))</span></p>
                <p>Importe (IVA 16%): <span>@((Model.Sum(item => item.Sub_Total) * 0.16).ToString("C"))</span></p>
                <p>Total: <span>@((Model.Sum(item => item.Sub_Total) * 1.16).ToString("C"))</span></p>
            </div>

            <div class="flex-row">
                <a href="/Home/Home" class="btn btn-primary">Regresar</a>
                <button class="btn btn-primary" onclick="Comprar()">Comprar</button>
            </div>
        }
        else
        {
            <p class="empty-cart">No hay elementos en el carrito.</p>
            <div class="flex-row">
                <a href="/Home/Home" class="btn btn-primary">Regresar</a>
            </div>
        }


    </div>

    <script>
        function editarProducto(idCarrito) {
            window.location.href = '@Url.Action("EditarProducto", "Home")?idC=' + idCarrito;
        }

        function confirmarEliminacion(idCarrito, cantidad) {
            if (confirm("¿Seguro que desea eliminar este producto?")) {
                if (confirm("¿Seguro?")) {
                    window.location.href = '@Url.Action("EliminarProducto", "Home")?id=' + idCarrito + '&cantidad=' + cantidad;
                }
            }
        }

        function Comprar() {
            window.location.href = '@Url.Action("MetodoPago", "Home")';
        }
    </script>
</body>
</html>